<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2015 Google Inc. All rights reserved.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<sample>
    <name>XYZ Tourist Attractions</name>
    <group>Wearable</group>
    <package>com.example.android.xyztouristattractions</package>
    <minSdk>18</minSdk>

    <dependency>com.android.support:appcompat-v7:21.0.3</dependency>
    <dependency>com.google.android.gms:play-services-wearable:6.5.+</dependency>
    <dependency>com.google.android.gms:play-services-location:6.5.+</dependency>
    <dependency>com.google.maps.android:android-maps-utils:0.3.2</dependency>
    <dependency>com.github.bumptech.glide:glide:3.5.1</dependency>
    <dependency>com.android.support:recyclerview-v7:21.0.0</dependency>
    <dependency_wearable>com.google.android.gms:play-services-wearable:6.5.+</dependency_wearable>
    <dependency_wearable>com.google.android.gms:play-services-location:6.5.+</dependency_wearable>
    <dependency_wearable>com.google.android.support:wearable:1.1.0</dependency_wearable>
    <dependency_shared>com.google.android.gms:play-services-wearable:6.5.+</dependency_shared>
    <dependency_shared>com.google.android.gms:play-services-location:6.5.+</dependency_shared>
    <dependency_shared>com.google.maps.android:android-maps-utils:0.3.2</dependency_shared>

    <strings>
        <intro>
            <![CDATA[
            This sample aims to be as close to a real world example of a mobile
            and wear app combination as possible. It has a more refined design
            and also provides a practical example of how a mobile app would
            interact and communicate with its wear counterpart.

            The app itself is modeled after a hypothetical tourist attractions
            app that notifies the user when they are in close proximty to
            interesting points of interest.

            The wear component loads a full wearable app that shows images and
            summary information about these tourist attractions in a
            GridViewPager UI component.
            ]]>
        </intro>
    </strings>

    <template src="base" />
    <template src="WearPlusShared"/>

    <metadata>
        <!-- Values: {DRAFT | PUBLISHED | INTERNAL | DEPRECATED | SUPERCEDED} -->
        <status>DRAFT</status>
        <!-- See http://go/sample-categories for details on the next 4 fields. -->
        <categories>Wearable, UI</categories>
        <technologies>Android</technologies>
        <languages>Java</languages>
        <solutions>Mobile</solutions>
        <!-- Values: {BEGINNER | INTERMEDIATE | ADVANCED | EXPERT} -->
        <level>INTERMEDIATE</level>
        <!-- Dimensions: 512x512, PNG fomrat -->
        <icon>screenshots/icon-web.png</icon>
        <!-- Path to screenshots. Use <img> tags for each. -->
        <screenshots>
            <img>screenshots/mobile-1-list.png</img>
            <img>screenshots/mobile-2-detail.png</img>
            <img>wear-round-1.png</img>
            <img>wear-round-2.png</img>
            <img>wear-round-3.png</img>
            <img>wear-round-4.png</img>
            <img>wear-round-5.png</img>
            <img>wear-round-6.png</img>
            <img>wear-square-1.png</img>
            <img>wear-square-2.png</img>
            <img>wear-square-3.png</img>
            <img>wear-square-4.png</img>
            <img>wear-square-5.png</img>
            <img>wear-square-6.png</img>
        </screenshots>
        <!-- List of APIs that this sample should be cross-referenced under. Use <android>
        for fully-qualified Framework class names ("android:" namespace).

        Use <ext> for custom namespaces, if needed. See "Samples Index API" documentation
        for more details. -->
        <api_refs>
            <android>android.support.v7.appcompat</android>
            <android>android.support.v7.widget.RecyclerView</android>
            <android>android.support.v7.widget.GridLayoutManager</android>
            <android>com.google.android.gms.common.api.GoogleApiClient</android>
            <android>com.google.android.gms.wearable.Wearable</android>
            <android>com.google.android.gms.wearable.DataApi</android>
            <android>com.google.android.gms.wearable.NodeApi</android>
            <android>com.google.android.gms.wearable.WearableListenerService</android>
            <android>com.google.android.gms.location.LocationServices.GeofencingApi</android>
            <android>com.google.android.gms.location.LocationServices.FusedLocationApi</android>
            <android>android.support.wearable.view.DismissOverlayView</android>
            <android>android.support.wearable.view.DotsPageIndicator</android>
            <android>android.support.wearable.view.GridViewPager</android>
            <android>android.support.wearable.activity.ConfirmationActivity</android>
            <android>android.support.wearable.view.CardFrame</android>
            <android>android.support.wearable.view.CardScrollView</android>
            <android>android.support.wearable.view.GridPagerAdapter</android>
            <android>android.support.wearable.view.WatchViewStub</android>
        </api_refs>

        <!-- 1-3 line description of the sample here.

            Avoid simply rearranging the sample's title. What does this sample actually
            accomplish, and how does it do it? -->
        <description>
            This sample aims to be as close to a real world example of a mobile
            and wear app combination as possible. It has a more refined design
            and also provides a practical example of how a mobile app would
            interact and communicate with its wear counterpart.

            The app itself is modeled after a hypothetical tourist attractions
            app that notifies the user when they are in close proximty to
            interesting points of interest.

            The wear component loads a full wearable app that shows images and
            summary information about these tourist attractions in a
            GridViewPager UI component.
        </description>

        <!-- Multi-paragraph introduction to sample, from an educational point-of-view.
        Makrdown formatting allowed. This will be used to generate a mini-article for the
        sample on DAC. -->
        <intro>
            TODO

            Multi-paragraph introduction to sample, from an educational point-of-view.
            *Makrdown* formatting allowed. See [Markdown Documentation][1]
            for details.

            [1]: http://daringfireball.net/projects/markdown/syntax
        </intro>
    </metadata>
</sample>
